import{_ as s,c as n,o as a,d as p}from"./app.921dc848.js";const A=JSON.parse('{"title":"258. 各位相加","description":"","frontmatter":{},"headers":[],"relativePath":"problems/258.各位相加.md"}'),l={name:"problems/258.各位相加.md"},o=p(`<h1 id="_258-各位相加" tabindex="-1">258. 各位相加 <a class="header-anchor" href="#_258-各位相加" aria-hidden="true">#</a></h1><p>给定一个非负整数 num，反复将各个位上的数字相加，直到结果为一位数。返回这个结果。</p><p>示例 1:<br> 输入: num = 38<br> 输出: 2<br> 解释: 各位相加的过程为：<br> 38 --&gt; 3 + 8 --&gt; 11<br> 11 --&gt; 1 + 1 --&gt; 2<br> 由于  2 是一位数，所以返回 2。</p><p>示例 2:<br> 输入: num = 0<br> 输出: 0</p><p>提示：<br> 0 &lt;= num &lt;= 231 - 1</p><p>进阶：你可以不使用循环或者递归，在 O(1) 时间复杂度内解决这个问题吗？</p><p>来源：力扣（LeetCode）<br> 链接：<a href="https://leetcode.cn/problems/add-digits" target="_blank" rel="noreferrer">https://leetcode.cn/problems/add-digits</a></p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;">/**</span></span>
<span class="line"><span style="color:#676E95;"> * </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">param</span><span style="color:#676E95;"> </span><span style="color:#89DDFF;">{</span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">}</span><span style="color:#676E95;"> </span><span style="color:#A6ACCD;">num</span></span>
<span class="line"><span style="color:#676E95;"> * </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">return</span><span style="color:#676E95;"> </span><span style="color:#89DDFF;">{</span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;"> */</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> addDigits </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">num</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> ((</span><span style="color:#A6ACCD;">num</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">%</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">9</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">addDigits</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">38</span><span style="color:#A6ACCD;">))</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">addDigits</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">))</span></span>
<span class="line"></span></code></pre></div>`,8),e=[o];function t(r,c,y,F,D,C){return a(),n("div",null,e)}const d=s(l,[["render",t]]);export{A as __pageData,d as default};
